apiVersion: v1
kind: ConfigMap
metadata:
  name: passive-node
  namespace: cardano
  labels:
    app: cadano-node
data:
  initContainer-entrypoint: |
    rm -rf /opt/cardano/cnode/db/lost+found

    FILES="config.yaml config.json alonzo-genesis.json byron-genesis.json genesis.json topology.json"

    for file in ${FILES}
    do
      test ! -e /opt/cardano/cnode/files.pvc/${file} && \
        cp /opt/cardano/cnode/files/${file} /opt/cardano/cnode/files.pvc/
    done

    if [ "${CNODE_USE_CONFIGMAP}" == "true" ]
    then
      for file in ${FILES}
      do
        test -e /configmap/${file} && \
          cp /configmap/${file} /opt/cardano/cnode/files.pvc/
      done
    fi

    NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
    KUBE_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)

    cp -a /opt/cardano/cnode/files.pvc/topology.json /tmp/topology.json.tmp

    curl -sSk -H "Authorization: Bearer $KUBE_TOKEN" https://kubernetes.default.svc/api/v1/namespaces/${NAMESPACE}/pods  | jq -r .items[].metadata.name | grep ^passive-node | \
      while read node
      do
        set -x
        if [[ "${MY_POD_NAME}" != "${node}" ]] && [[ "${node}" != "null" ]]
        then
          PEER_ADDR="${node}.passive-node.${NAMESPACE}.svc.cluster.local"
          jq -r \
            --arg addr ${PEER_ADDR} \
            --arg port ${CNODE_PORT} \
            --arg valency 1 \
            '.Producers += [{"addr":$addr,"port":($port|tonumber),"valency":($valency|tonumber)}]' \
            /tmp/topology.json.tmp > /tmp/topology.json
            mv /tmp/topology.json /tmp/topology.json.tmp
        fi
      done

    VALENCY=$(dig +short leader-node.${NAMESPACE}.svc.cluster.local | wc -l)
    if [ ${VALENCY} -lt 1 ]
    then
      VALENCY=1
    fi

    jq -r \
      --arg addr leader-node.${NAMESPACE}.svc.cluster.local \
      --arg port ${CNODE_PORT} \
      --arg valency ${VALENCY} \
      '.Producers += [{"addr":$addr,"port":($port|tonumber),"valency":($valency|tonumber)}]' \
      /tmp/topology.json.tmp > /tmp/topology.json
    mv /tmp/topology.json /tmp/topology.json.tmp

    cp /tmp/topology.json.tmp /opt/cardano/cnode/files.pvc/topology.json.${CNODE_ROLE}

    chown -R nobody: \
      /opt/cardano/cnode/files/*topology* \
      /opt/cardano/cnode/files/*genesis* \
      /opt/cardano/cnode/files/*config* \
      /opt/cardano/cnode/db || true
