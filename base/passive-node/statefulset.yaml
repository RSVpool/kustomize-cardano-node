apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    io.kompose.service: passive-node
  name: passive-node
spec:
  serviceName: passive-node
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: passive-node
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        io.kompose.service: passive-node
    spec:
      initContainers:
      - name: configure
        command: ["bash", "/configmap/initContainer-entrypoint"]
        image: rcmorano/cardano-node:guild-ops-ptn0-passive
        imagePullPolicy: "IfNotPresent"
        env:
        - name: CNODE_PORT
          value: "6000"
        - name: CNODE_HOST_ADDR
          value: "0.0.0.0"
        - name: CNODE_USE_CONFIGMAP
          value: "true"
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - mountPath: /opt/cardano/cnode/files.pvc
          name: passive-node-files
        - mountPath: /opt/cardano/cnode/priv
          name: passive-node-priv
        - mountPath: /opt/cardano/cnode/db
          name: passive-node-db
        - mountPath: /configmap
          name: passive-node-configmap
      containers:
      - name: passive-node
        command: ["bash", "-c", "export HOME=/nonexistent; source $HOME/.baids/baids && set -x; ${NETWORK}-cnode-run-as-${CNODE_ROLE} +RTS -N --disable-delayed-os-memory-return -I0.3 -Iw600 -A32m -F1.5 -H3G -T"]
        env:
        - name: CNODE_PORT
          value: "6000"
        image: rcmorano/cardano-node:guild-ops-ptn0-passive
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 6000
        - containerPort: 12798
        resources:
          #limits:
          #  memory: 1000Mi
          requests:
            memory: 2000Mi
            cpu: 500m
        volumeMounts:
        - mountPath: /opt/cardano/cnode/files
          name: passive-node-files
        - mountPath: /opt/cardano/cnode/priv
          name: passive-node-priv
        - mountPath: /opt/cardano/cnode/db
          name: passive-node-db
        - mountPath: /configmap
          name: passive-node-configmap
      startupProbe:
        exec:
          command: ["bash","-c","source /nonexistent/.baids/functions.d/99-misc; cardano-node-startup-probe"]
        failureThreshold: 30
        periodSeconds: 20
      readinessProbe:
        exec:
          command: ["bash","-c","source /nonexistent/.baids/functions.d/99-misc; cardano-node-startup-probe"]
        failureThreshold: 30
        periodSeconds: 10
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: passive-node-configmap
        configMap:
          name: passive-node
  volumeClaimTemplates:
  - metadata:
      name: passive-node-files
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi
  - metadata:
      name: passive-node-priv
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi
  - metadata:
      name: passive-node-db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

