apiVersion: v1
kind: ConfigMap
metadata:
  name: leader-node
  namespace: cardano
  labels:
    app: cadano-node
data:
  initContainer-entrypoint: |
    rm -rf /opt/cardano/cnode/db/lost+found

    FILES="config.yaml config.json alonzo-genesis.json byron-genesis.json genesis.json topology.json"

    for file in ${FILES}
    do
      test ! -e /opt/cardano/cnode/files.pvc/${file} && \
        cp /opt/cardano/cnode/files/${file} /opt/cardano/cnode/files.pvc/
    done

    if [ "${CNODE_USE_CONFIGMAP}" == "true" ]
    then
      for file in ${FILES}
      do
        test -e /configmap/${file} && \
          cp /configmap/${file} /opt/cardano/cnode/files.pvc/
      done
    fi

    if [ "${CNODE_LOCAL_TOPOLOGY_DISCOVER}" == "true" ]
    then
      NAMESPACE=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
      KUBE_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)

      set -x
      echo '{"Producers":[]}' > /tmp/topology.json.tmp

      VALENCY=$(dig +short passive-node-headless.${NAMESPACE}.svc.cluster.local | wc -l)

      jq -r \
        --arg addr passive-node-headless.${NAMESPACE}.svc.cluster.local \
        --arg port ${CNODE_PORT} \
        --arg valency ${VALENCY} \
        '.Producers += [{"addr":$addr,"port":($port|tonumber),"valency":($valency|tonumber)}]' \
        /tmp/topology.json.tmp > /tmp/topology.json
        cp /tmp/topology.json /opt/cardano/cnode/files.pvc/topology.json.${CNODE_ROLE}
    else
        cp /opt/cardano/cnode/files.pvc/topology.json /opt/cardano/cnode/files.pvc/topology.json.${CNODE_ROLE}
    fi

    
    chown -R nobody: \
      /opt/cardano/cnode/files/*topology* \
      /opt/cardano/cnode/files/*genesis* \
      /opt/cardano/cnode/files/*config* \
      /opt/cardano/cnode/db || true
